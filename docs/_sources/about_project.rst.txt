###################
About pyWeatherQAQC
###################

.. image:: images/station.jpg
    :width: 200px
    :align: right
    :height: 200px
    :alt: A remote-sensing station on the USBR's AgriMet Network.

Local weather stations are a common method for remotely-sensing weather data. Unfortunately, they are often placed in remote locations where they may not receive regular maintenance, causing sensors to degrade over time. In other cases, acute occurrences like voltage spikes may result in a few bad readings out of an otherwise good record. If factors such as these and their resulting bad observations go unmitigated, later decisions based on the data may be flawed. Therefore, it is important to review data records from these stations.

**pyWeatherQAQC** enables users to quickly and easily visualize daily weather data collected from local weather stations, as well as correct said data should they desire to.

The code only requires Python 3.6 or 3.7, a few Python packages, and a few moments of setup to get running.

Goals of the project:

*   Allow user to easily configure the code to handle any form or format of daily weather data.
*   Graphically plots data for visual inspection.
*   Allows user to make corrections, from modifying the entire record to selecting individual data points.
*   Recomputes any secondary variables that have had underlying variables modified.
*   Generates and saves figures of corrected data and a log file for accountability of exactly what was changed.

.. note::
   pyWeatherQAQC was developed for daily weather data. Support for hourly data is within the eventual scope of this project but is currently not available.

**If you're unfamiliar with Python**, I recommend you read :doc:`Installing Python. <python_setup>`

**Otherwise**, see :doc:`pyWeatherQAQC Setup <qaqc_setup>` to get started.

